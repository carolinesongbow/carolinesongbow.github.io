<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on </title>
    <link>/tags/linux/</link>
    <description>Recent content in Linux on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 14 Jul 2017 17:41:54 +0800</lastBuildDate><atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>绿色版jdk安装执行命令</title>
      <link>/post/2017-07-14-%E7%BB%BF%E8%89%B2%E7%89%88jdk%E5%AE%89%E8%A3%85%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 14 Jul 2017 17:41:54 +0800</pubDate>
      
      <guid>/post/2017-07-14-%E7%BB%BF%E8%89%B2%E7%89%88jdk%E5%AE%89%E8%A3%85%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</guid>
      <description>[root@fbgouhuaapp01 java]# alternatives --install /usr/bin/java java /usr/local/java/jdk1.8.0_121/bin/java 2 [root@fbgouhuaapp01 java]# alternatives --config java There is 1 program that provides &amp;#39;java&amp;#39;. Selection Command ----------------------------------------------- *+ 1 /usr/local/java/jdk1.8.0_121/bin/java Enter to keep the current selection[+], or type selection number: 1 [root@fbgouhuaapp01 java]# alternatives --install /usr/bin/jar jar /opt/jdk1.8.0_121/bin/jar 2 [root@fbgouhuaapp01 java]# alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_121/bin/javac 2 [root@fbgouhuaapp01 java]# alternatives --set jar /opt/jdk1.8.0_121/bin/jar [root@fbgouhuaapp01 java]# alternatives --set javac /opt/jdk1.8.0_121/bin/javac [root@fbgouhuaapp01 java]# java --version  </description>
    </item>
    
    <item>
      <title>shell学习笔记（更新中）</title>
      <link>/post/2017-03-29-shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%9B%B4%E6%96%B0%E4%B8%AD/</link>
      <pubDate>Sun, 02 Apr 2017 17:57:54 +0800</pubDate>
      
      <guid>/post/2017-03-29-shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%9B%B4%E6%96%B0%E4%B8%AD/</guid>
      <description>什么时候不使用shell  大量数据处理任务，尤其是当要求速度时（排序、哈希、递归）。 涉及重型数学运算（使用 C++ 或 FORTRAN 来替代）。 需要跨平台（使用 C 或 Java 替代）。 需要结构化编程的复杂应用程序（变量的类型检查，函数原型等）。 非常非常关键性的任务。 当需要确保安全性时。 项目由具有互锁依赖性的子组件组成。 需要大量文件操作（Bash仅限于串行文件访问，且它的逐行执行方式笨拙并低效）。 需支持多维数组。 需支持数据结构。 需生成/操纵图形或 GUI。 需要直接访问系统硬件或外部外围设备。 需要端口或 socket I/O。 需要使用库或历史代码生成的接口。 专有的封闭源代码应用程序。  一个简单的栗子：清理脚本 #!/bin/bash # Proper header for a Bash script. # Cleanup, version 2 # Run as root, of course. # Insert code here to print error message and exit if not root. LOG_DIR=/var/log # Variables are better than hard-coded values. cd $LOG_DIR # cat /dev/null &amp;gt; file 即把 file 放入垃圾箱，并给 file 赋空值 cat /dev/null &amp;gt; messages cat /dev/null &amp;gt; wtmp echo &amp;#34;Logs cleaned up.</description>
    </item>
    
    <item>
      <title>win10 搭建 linux 虚拟机局域网，安装 MySQL</title>
      <link>/post/2017-03-04-win10%E6%90%AD%E5%BB%BAlinux%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B1%80%E5%9F%9F%E7%BD%91-%E5%AE%89%E8%A3%85mysql/</link>
      <pubDate>Sat, 04 Mar 2017 13:29:54 +0800</pubDate>
      
      <guid>/post/2017-03-04-win10%E6%90%AD%E5%BB%BAlinux%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B1%80%E5%9F%9F%E7%BD%91-%E5%AE%89%E8%A3%85mysql/</guid>
      <description>为了完成搭建 MySQL 主从数据库的任务，在自己电脑上从头搭建环境。遇到的问题和解决方法在这里做一一记录。
 问题1：  使用 VMware 安装虚拟机时，出现「not enough free space on disks」的提示。
 解决方法：在配置虚拟机硬盘大小时，应大于等于4GB，否则就会报这个错误。
安装 JDK 记录：  使用su root命令切换至 root 用户。 使用rpm -qa | grep java查看本机是否已安装 Java。 使用yum -y list java*查看可以下载安装的 Java 包。 使用yum -y install java-1.8.0-openjdk*安装1.8.0版本的 JDK。    问题2：  安装 JDK 时，出现「Disk Requirements: At least 821MB more space needed on the / filesystem.」的错误提示。
 解决方法：在 VMware 上扩展磁盘后，还需在 linux 上执行硬盘空间的挂载。中间遇到较多问题难以解决，笔者对于 linux 硬盘挂载的原理也不甚了解，目前 linux 虚拟机上没有什么重要的东西，基于时间原因决定放弃，重新安装虚拟机。</description>
    </item>
    
    <item>
      <title>MySQL 搭建主从数据库</title>
      <link>/post/2017-01-02-mysql%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Mon, 02 Jan 2017 23:39:54 +0800</pubDate>
      
      <guid>/post/2017-01-02-mysql%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>使用 MySQL 版本：5.7 系统环境：CentOS 6.5  修改主服务器（master）配置： $ vim /etc/my.cnf # 启用二进制日志 log-bin=mysql-bin # 服务器唯一ID server-id=111 修改从服务器（slave）配置： $ vim /etc/my.cnf # 启用二进制日志，可不配 log-bin=mysql-bin # 服务器唯一ID server-id=112 重启两个 MySQL 服务 service mysqld restart; 在主库建一个专用来备份的 MySQL 账户 mysql&amp;gt; grant replication slave,reload,super on *.* &amp;gt; to &#39;backup&#39;@&#39;192.168.1.50&#39; identified by &#39;password&#39;; Query OK, 0 rows affected, 1 warning (0.01 sec) mysql&amp;gt; flush privileges; Query OK, 0 rows affected (0.00 sec) backup：账号名
password：密码
192.168.1.50：从库IP地址</description>
    </item>
    
  </channel>
</rss>
